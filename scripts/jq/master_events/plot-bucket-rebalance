#!/bin/bash

# Copyright 2019-Present Couchbase, Inc.
#
# Use of this software is governed by the Business Source License included in
# the file licenses/BSL-Couchbase.txt.  As of the Change Date specified in that
# file, in accordance with the Business Source License, use of this software
# will be governed by the Apache License, Version 2.0, included in the file
# licenses/APL2.txt.

# Plot a timeline of vbucket moves for a particular bucket. Requires python3
# and matplotlib python library.
#
# Use as:
#
#   ./read master_events.log | \
#      ./last-rebalance | \
#      ./plot-bucket_rebalance "bucket-name"

DIRNAME="$(dirname "${BASH_SOURCE[0]}")"
BUCKET="$1"

SCRIPT='
def handle_move($minTS):
  (.events | map(select(.type == "backfillPhaseEnded"))[0]) as $backfillEnd |
  (if (.chainBefore[0] != .chainAfter[0])
   then "active"
   else "replica" end) as $moveType |
  {start: (.moveStartTS - $minTS),
   duration:
    (if (.moveEndTS != null)
     then (.moveEndTS - .moveStartTS)
     else null end),
   backfillDuration:
    (if ($backfillEnd.ts != null)
     then ($backfillEnd.ts - .moveStartTS)
     else null end),
   vbucket: .vbucket,
   type: $moveType};

# Filter buckets to only those with moves
map(select(.moves | length > 0)) |
sort_by(.moves[-1].moveStartTS) |
if (. | length) > 0 then
 # If no bucket was provided, pick the last bucket to be rebalanced
 (if $bucket == "" then .[-1].bucket else $bucket end) as $bucket |
   map(select(.bucket == $bucket))[0].moves |
   sort_by(.moveStartTS) |
   .[0].moveStartTS as $minTS |
   map(handle_move($minTS)) as $moves |
   {bucket: $bucket,
    moves: $moves}
else
 # There are no buckets with any moves
 {bucket: $bucket,
  moves: []}
end
'

"$DIRNAME"/group-moves | \
    jq --arg bucket "$BUCKET" "$SCRIPT" | \
    "$DIRNAME"/plot_bucket_rebalance.py
